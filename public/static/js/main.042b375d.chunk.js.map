{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFav.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","startLogout","dispatch","clear","logout","login","user","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","title","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","console","log","isSameOrAfter","trim","length","id","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFav","locale","localizer","momentLocalizer","CalendarScreen","lastview","setLastview","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onSelectEvent","onDoubleClickEvent","onSelectSlot","selectable","onView","view","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.042b375d.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchSinToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if(method === 'GET'){\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type' : 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const fetchConToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if(method === 'GET'){\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type' : 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\n\r\n","export const types = {\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n    \r\n    eventSetActive: '[event] Set active',\r\n    eventLogout: '[event] Logout',\r\n    \r\n    eventStartAddNew: '[event] Start add new',    \r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n\r\n    eventStartLoading: '[event] Event start loading',\r\n    eventLoaded: '[event] Event loaded',\r\n    \r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start loging',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start Token renew',    \r\n    authLogout: '[auth] Logout',\r\n\r\n}\r\n","import moment from 'moment'\r\n\r\nexport const prepareEvents = (events = []) => {\r\n\r\n    return events.map(\r\n        (e)=>({\r\n            ...e,\r\n            end: moment(e.end).toDate(), \r\n            start: moment(e.start).toDate() \r\n        })\r\n    )\r\n    \r\n}\r\n","import { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                }\r\n\r\n                console.log(event);\r\n\r\n                dispatch(eventAddNew(event));\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n\r\n            console.log(error)\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n\r\n    type: types.eventClearActiveEvent\r\n\r\n})\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventUpdated(event));\r\n            } else {\r\n                Swal.fire('ERROR', body.msg, 'error');\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\n\r\nexport const eventStartDelete = () => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const { id } = getState().calendar.activeEvent\r\n\r\n        try {\r\n            const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventDeleted());\r\n            } else {\r\n                Swal.fire('ERROR', body.msg, 'error');\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nconst eventDeleted = () => ({ type: types.eventDeleted });\r\n\r\nexport const eventStartLoading = (params) => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n            const events = prepareEvents(body.eventos);\r\n            dispatch(eventLoaded(events));\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\n\r\nexport const eventLoggedOut = () => ({\r\n    type: types.eventLogout    \r\n})\r\n\r\n\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLoggedOut } from \"./events\";\r\n\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            Swal.fire('ERROR', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth/new', { name, email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        console.log(body);\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            Swal.fire('ERROR', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        console.log('startChecking',body);\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startLogout = ()=>{\r\n    return (dispatch) => {\r\n\r\n        localStorage.clear();\r\n        dispatch(eventLoggedOut());\r\n        dispatch(logout());\r\n        \r\n\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.authLogout    \r\n})\r\n\r\n\r\n\r\nexport const checkingFinish = () => ({\r\n\r\n    type: types.authCheckingFinish\r\n\r\n})\r\n\r\n\r\nexport const login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { startLogin, startRegister } from \"../../actions/auth\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport \"./login.css\";\r\n\r\nexport const LoginScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [formLoginValues, handleLoginInputChange] = useForm({\r\n    lEmail: \"\",\r\n    lPassword: \"\",\r\n  });\r\n\r\n  const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n    rName: \"\",\r\n    rEmail: \"\",\r\n    rPassword1: \"\",\r\n    rPassword2: \"\",\r\n  });\r\n\r\n  const { lEmail, lPassword } = formLoginValues;\r\n\r\n  const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    dispatch(startLogin(lEmail, lPassword));\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (rPassword1 !== rPassword2) {\r\n      return Swal.fire(\"ERROR\", \"Las contraseñas deben ser iguales\", \"error\");\r\n    }\r\n\r\n    dispatch(startRegister(rEmail, rPassword1, rName));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container login-container\">\r\n      <div className=\"row d-flex justify-content-center\">\r\n        <div className=\"col-md-6 login-form-1\">\r\n          <h3>Ingreso</h3>\r\n          <form onSubmit={handleLogin}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Correo\"\r\n                name=\"lEmail\"\r\n                value={lEmail}\r\n                onChange={handleLoginInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"lPassword\"\r\n                value={lPassword}\r\n                onChange={handleLoginInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group d-flex justify-content-center\">\r\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        {false && (\r\n          <div className=\"col-md-6 login-form-2\">\r\n            <h3>Registro</h3>\r\n            <form onSubmit={handleRegister}>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nombre\"\r\n                  name=\"rName\"\r\n                  value={rName}\r\n                  onChange={handleRegisterInputChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Correo\"\r\n                  name=\"rEmail\"\r\n                  value={rEmail}\r\n                  onChange={handleRegisterInputChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Contraseña\"\r\n                  name=\"rPassword1\"\r\n                  value={rPassword1}\r\n                  onChange={handleRegisterInputChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Repita la contraseña\"\r\n                  name=\"rPassword2\"\r\n                  value={rPassword2}\r\n                  onChange={handleRegisterInputChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btnSubmit\"\r\n                  value=\"Crear cuenta\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n    \r\n    const {name} = useSelector( state => state.auth );\r\n    const dispatch = useDispatch();\r\n\r\n    const handlelogout = () => {\r\n        dispatch(startLogout());        \r\n    }    \r\n    \r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            <button\r\n                className=\"btn btn-outline-danger\"\r\n                onClick={handlelogout}>\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({\r\n    type:types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n    type:types.uiCloseModal\r\n});","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventStartAddNew, eventClearActiveEvent, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n    const { notes, title, start, end } = formValues;\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent);\r\n        }\r\n        else {\r\n            setFormValues(initEvent);\r\n        }\r\n\r\n\r\n    }, [activeEvent, setFormValues]);\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        console.log(start, end);\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            return Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha de inicio', 'error');\r\n        }\r\n\r\n        if (title.trim().length < 2) {\r\n            setTitleValid(false);\r\n        }\r\n\r\n\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdate(formValues));\r\n        }\r\n        else {\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\">\r\n\r\n            <h1> {(activeEvent) ? 'Editar Evento' : 'Nuevo evento'} </h1>\r\n            <hr />\r\n            <form className=\"container\"\r\n                onSubmit={handleSubmitForm}>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        minDate={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\">\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    \r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = () =>{\r\n        dispatch(uiOpenModal());\r\n    }\r\n    \r\n    return (\r\n        <button className=\"btn btn-primary fab\" onClick={handleClick}>\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventDeleted, eventStartDelete, eventStartUpdate } from '../../actions/events';\r\n\r\nexport const DeleteEventFav = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n\r\n        dispatch(eventStartDelete());\r\n\r\n    }\r\n\r\n    return (\r\n        <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar Evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\n\r\nimport 'moment/locale/es';\r\nimport moment from 'moment'\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFav } from '../ui/DeleteEventFav';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n\r\n// const events = [{\r\n//     title: 'Cumpleaños del tereso',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'comprar peras',\r\n//     user: {\r\n//         _id: 123,\r\n//         name: 'Tereso'\r\n//     }\r\n// }]\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const [lastview, setLastview] = useState(localStorage.getItem('lastView') || 'month');\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(eventStartLoading());\r\n\r\n    }, [dispatch])\r\n\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal())\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastview(e);\r\n        localStorage.setItem('lastView', e)\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n\r\n\r\n\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onSelectEvent={onSelectEvent}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                onView={onViewChange}\r\n                view={lastview}\r\n            // components={{\r\n            //     event: CalendarEvent\r\n            // }}\r\n            />\r\n            <AddNewFab />\r\n            {\r\n                activeEvent && <DeleteEventFav />\r\n            }\r\n            <CalendarModal />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { checking, uid } = useSelector(state => state.auth);\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(startChecking());\r\n\r\n    // }, [dispatch]);\r\n\r\n    // if(checking){\r\n    //     return (<h5>Espere...</h5>);\r\n    // }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        component={LoginScreen} \r\n                        isAuthenticated={ !!uid } />\r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\" \r\n                        component={CalendarScreen} \r\n                        isAuthenticated={ !!uid } />\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import moment from 'moment'\r\nimport { act } from 'react-dom/test-utils';\r\nimport { types } from '../types/types';\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Cumpleaños del tereso',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'comprar peras',\r\n//     user: {\r\n//         _id: 123,\r\n//         name: 'Tereso'\r\n//     }\r\n\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, action.payload]\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded: \r\n            return{\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    uid: null,\r\n    name: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false,\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:            \r\n            return {\r\n                checking: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\nimport {authReducer} from './authReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n\r\n    ui: uiReducer,               \r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n\r\n});","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n)","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css'\n\n\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}